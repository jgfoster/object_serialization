[{"name":"object_serialization","qualifiedName":"object_serialization","href":"object_serialization/object_serialization-library.html","kind":9,"overriddenDepth":0,"packageRank":0,"desc":"A serialization library that supports circular references and\npreserves identity when objects are referenced via multiple paths."},{"name":"FactoryFunction","qualifiedName":"object_serialization.FactoryFunction","href":"object_serialization/FactoryFunction.html","kind":21,"overriddenDepth":0,"packageRank":0,"desc":"When decoding a JSON string, the ObjectSerialization class uses factory\nfunctions to create objects of specific types. The factory functions are\nprovided as a map where the keys are the type names and the values are\nfunctions that create objects of that type.","enclosedBy":{"name":"object_serialization","kind":9,"href":"object_serialization/object_serialization-library.html"}},{"name":"ObjectSerialization","qualifiedName":"object_serialization.ObjectSerialization","href":"object_serialization/ObjectSerialization-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"This class that provides static methods to encode\nand decode objects to and from JSON strings.","enclosedBy":{"name":"object_serialization","kind":9,"href":"object_serialization/object_serialization-library.html"}},{"name":"ObjectSerialization","qualifiedName":"object_serialization.ObjectSerialization.ObjectSerialization","href":"object_serialization/ObjectSerialization/ObjectSerialization.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"","enclosedBy":{"name":"ObjectSerialization","kind":3,"href":"object_serialization/ObjectSerialization-class.html"}},{"name":"decode","qualifiedName":"object_serialization.ObjectSerialization.decode","href":"object_serialization/ObjectSerialization/decode.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"decode takes a JSON string and a map of factory functions and returns\nthe object that was encoded in the JSON string. The factory functions are\nused to create objects of specific types. The factory functions are\nprovided as a map where the keys are the type names and the values are\nfunctions that create objects of that type.","enclosedBy":{"name":"ObjectSerialization","kind":3,"href":"object_serialization/ObjectSerialization-class.html"}},{"name":"encode","qualifiedName":"object_serialization.ObjectSerialization.encode","href":"object_serialization/ObjectSerialization/encode.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"encode takes an object and returns a JSON string representation of that\nobject. The object can be a simple object, a list, a set, or an object that\nimplements Serializable. The object can contain circular references.","enclosedBy":{"name":"ObjectSerialization","kind":3,"href":"object_serialization/ObjectSerialization-class.html"}},{"name":"Serializable","qualifiedName":"object_serialization.Serializable","href":"object_serialization/Serializable-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"This is an interface that classes can implement or inherit\nto handle custom serialization and deserialization. Classes that implement\nSerializable must provide a factory constructor that takes a list of final\nproperties. The final properties are the properties that are not transient\nand are required to create the object. The transient properties are set\nseparately after the object is created.","enclosedBy":{"name":"object_serialization","kind":9,"href":"object_serialization/object_serialization-library.html"}},{"name":"Serializable","qualifiedName":"object_serialization.Serializable.Serializable","href":"object_serialization/Serializable/Serializable.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"","enclosedBy":{"name":"Serializable","kind":3,"href":"object_serialization/Serializable-class.html"}},{"name":"finalProperties","qualifiedName":"object_serialization.Serializable.finalProperties","href":"object_serialization/Serializable/finalProperties.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"finalProperties returns a list of properties that are required to create\nthe object. These properties are serialized and deserialized with the\nobject. By separating final properties from transient properties, objects\nwith circular references can be serialized and deserialized.","enclosedBy":{"name":"Serializable","kind":3,"href":"object_serialization/Serializable-class.html"}},{"name":"transientProperties","qualifiedName":"object_serialization.Serializable.transientProperties","href":"object_serialization/Serializable/transientProperties.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"transientProperties returns a list of properties that are not required to\ncreate the object. These properties are set after the object is created.","enclosedBy":{"name":"Serializable","kind":3,"href":"object_serialization/Serializable-class.html"}},{"name":"Serializable.withFinalProperties","qualifiedName":"object_serialization.Serializable.withFinalProperties","href":"object_serialization/Serializable/Serializable.withFinalProperties.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Implementors of Serializable must provide a factory constructor\nbut since static methods are not allowed in interfaces and are\nnot inherited by subclasses, this is here as documentation.","enclosedBy":{"name":"Serializable","kind":3,"href":"object_serialization/Serializable-class.html"}}]
